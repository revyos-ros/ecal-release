/* ========================= eCAL LICENSE =================================
 *
 * Copyright (C) 2016 - 2019 Continental Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ========================= eCAL LICENSE =================================
*/

syntax = "proto3";

package eCAL.pb.rec_server;

message UploadConfig
{
  enum Type
  {
    Unknown         = 0;
    InternalFtp     = 1;
    Ftp             = 2;
  }
  
  Type type                             =  1;                                   // Whether the measurement was uploaded to the internal or external FTP
  string host                           =  2;                                   // External FTP only: Hostname of the FTP Server
  uint32 port                           =  3;                                   // External FTP only: Port of the FTP Server
  string username                       =  4;                                   // External FTP only: FTP username
  string password                       =  5;                                   // External FTP only: FTP password
  string root_path                      =  6;                                   // External FTP only: The measurement root dir on the FTP server
  bool delete_after_upload              =  7;                                   // Wether the measurement should have been deleted after a successfull upload
}

message RecClientConfig
{
  repeated string host_filter      =  1;                                        // Which hosts this client records. If emtpy, topics from all hosts are recorded
  repeated string enabled_addons   =  2;                                        // The IDs of the enabled addons
}

enum RecordMode
{
  All       = 0;
  Whitelist = 1;
  Blacklist = 2;
}

message RecServerConfig
{
  string                         root_dir                   =  1;               // The root directory where to save the measurements to
  string                         meas_name                  =  2;               // The name for new measurements. This name will be used for the name of a sub-directory in the root dir.
  int64                          max_file_size_mib          =  3;               // Max file size in MiB for HDF5 files
  bool                           one_file_per_topic         =  11;              // Whether to create 1 HDF5 file per eCAL Topic
  string                         description                =  4;               // The description for new measurements. Will be stored in the /doc/direction.txt file.
  map<string, RecClientConfig>   enabled_clients_config     =  5;               // All enabled rec clients along with their specific configuration
  bool                           pre_buffer_enabled         =  6;               // Whether pre-buffering is enabled
  int64                          pre_buffer_length_nsecs    =  7;               // The amount of nanoseconds that shall be kept in the pre-buffer
  bool                           built_in_recorder_enabled  =  8;               // Whether the built-in recorder is enabled. If false, the rec server application will look for a separate ecal_rec_client for recording on localhost.
  RecordMode                     record_mode                =  9;               // Whether to record all topics or just a subset (Whitelisted or blacklisted).
  repeated string                listed_topics              = 10;               // Only relevant when not recording all topics. If a whitelist or blacklist is used, this holds the according list.
  UploadConfig                   upload_config              = 12;               // The configuration used for uploading any new measurement.
}
